{"mappings":";;;;;;;;;ACEA,IAAI,iCAAuC;AAC3C,gEAAgE;AAChE,SAAS,gCAAU,QAAoB;IACnC,MAAM,UAAU,UAAU,WAAW,CAAC,aAAa,CAC/C,CAAC;QACG;QACA,iCAAW;IACf,GACA;QACI;QACA,iCAAW;IACf;IAGJ,gEAAgE;IAChE,OAAO,IAAM,UAAU,WAAW,CAAC,UAAU,CAAC;AAClD;AAEA,6DAA6D;AAC7D,SAAS;IACL,OAAO;AACX;AAEA,SAAS;IACL,mEAAmE;IACnE,MAAM,WAAW,CAAA,GAAA,iCAAmB,EAAE,iCAAW;IAEjD,OAAO;AACX;IAGA,2CAAe","sources":["src/index.ts","src/hooks/use-geo-location.ts"],"sourcesContent":["export { default as useGeolocation } from './hooks/use-geo-location'","import { useSyncExternalStore } from \"react\";\r\n\r\nlet position: GeolocationPosition | null = null;\r\n// This function is used to subscribe to the geolocation updates\r\nfunction subscribe(callback: () => void) {\r\n    const watchId = navigator.geolocation.watchPosition(\r\n        (newPosition) => {\r\n            callback();\r\n            position = newPosition;\r\n        },\r\n        () => {\r\n            callback();\r\n            position = null;\r\n        }\r\n    );\r\n\r\n    // Return a function to unsubscribe from the geolocation updates\r\n    return () => navigator.geolocation.clearWatch(watchId);\r\n}\r\n\r\n// This function is used to get the current geolocation state\r\nfunction getSnapshot() {\r\n    return position;\r\n}\r\n\r\nfunction useGeolocation(): GeolocationPosition | null {\r\n    // Use useSyncExternalStore to subscribe to the geolocation updates\r\n    const position = useSyncExternalStore(subscribe, getSnapshot);\r\n\r\n    return position;\r\n}\r\n\r\n\r\nexport default useGeolocation\r\n"],"names":[],"version":3,"file":"index.js.map"}